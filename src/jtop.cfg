abstract=
assert=
byte=
break=
case=spaft,gobsym,inbytab,crafter,lower
catch=
char=
const=blinbefore,dindonkey,spaft,inbytab,lower
continue=
default=
delete=
do=
double=
else=crbefore,dindonkey,inbytab,lower
[else]=else,if
enum=
extends=
instanceof=
fastcall=
finally=crbefore,dindent,inbytab,crafter,lower
[finally]=try
for=
false=
goto=
if=spaft,gobsym,inbytab,lower
import=
inline=
interface=blinbefore,crafter,lower
implements=
interrupt=
long=
near=
new=
null=
protected=crbefore,dindonkey,spaft,inbytab,lower
[protected]=protected,public,private,closebrace
strictfp=
return=
synchronized=
this=
throw=
throws=
try=crbefore,inbytab,crafter,lower
transient=
volatile=
while=
void=
public=crbefore,dindonkey,spaft,inbytab,lower
[public]=protected,public,private,closebrace
package=
private=crbefore,dindonkey,spaft,inbytab,lower
[private]=protected,public,private,closebrace
final=
class=inbyindent,lower
static=
boolean=
int=
native=
float=
becomes=spbef,spaft,gobsym,capital
notequal=
lessorequal=
greaterorequal=
delphicomment=crafter
dopencomment=
dclosecomment=
openbrace=crsupp,spaft,lower
[openbrace]=const
closebrace=lower
[closebrace]=else,finally,for,if,protected,try,while,public,private,class,colon,equals
semicolon=crafter,dindonkey,crafter,capital
[semicolon]=openbrace,else,finally,for,if,protected,try,while,public,private,class,colon,equals
colon=inbytab,capital
comma=spaft
[comma]=openbrace,else,finally,for,if,protected,try,while,public,private,class,colon,equals
equals=spbef,spaft,inbytab,capital
openparen=gobsym,capital
closeparen=
period=crsupp,capital
endoffile=
other=
